@page "/facturaCabeceras/eliminar/{id:int}"
@inject FacturaCabeceraService FacturaCabeceraService
@inject NavigationManager Nav
@using FacturadorDomain.Entities

<h3>Eliminar Cabecera de Factura</h3>

@if (facturaCabecera == null)
{
    <p>Cargando...</p>
}
@if (facturaCabecera is not null)
{
    <div class="mb-3">
        <p>¿Está seguro que quiere eliminar la Cabecera de Factura <strong>@facturaCabecera.Fact_ID</strong>?</p>
    </div>

    <button class="btn btn-danger me-2" @onclick="EliminarfacturaCabecera">Sí</button>
    <a class="btn btn-secondary" href="/facturaCabeceras">No</a>
}
else
{
    <p>Cargando cliente...</p>
}

@code {
    [Parameter]
    public int id { get; set; }

    FacturaCabecera? facturaCabecera;

    protected override async Task OnInitializedAsync()
    {
        facturaCabecera = await FacturaCabeceraService.GetFacturaCabeceraByIdAsync(id);
    }

    private async Task EliminarfacturaCabecera()
    {
        try
        {
            if (facturaCabecera is not null)
            {
                await FacturaCabeceraService.EliminarFacturaCabeceraAsync(facturaCabecera.Fact_ID);
                Nav.NavigateTo("/facturaCabeceras");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al eliminar la Cabecera de Factura: {ex.Message}");
        }
    }
}
